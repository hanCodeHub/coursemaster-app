package com.cs673team1.CourseMaster.user;

import com.cs673team1.CourseMaster.course.Course;

import com.cs673team1.CourseMaster.review.Review;
import com.fasterxml.jackson.annotation.JsonBackReference;

import javax.persistence.*;
import javax.validation.constraints.NotBlank;
import java.util.List;

@Entity
public class Instructor {

    /**
     * Unique, autogenerated id for this instructor.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;

    /**
     * Name of this instructor.
     */
    @NotBlank(message = "The instructor should have a name")
    private String name;

    /**
     * List of courses taught by this instructor.
     */
    @ManyToMany(mappedBy = "instructors")
    @JsonBackReference(value = "courses-instructors")
    private List<Course> courses;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "instructor")
    @JsonBackReference(value = "reviews-instructor")
    private List<Review> reviews;


    public Instructor() {
    }

    /**
     *
     * @return Returns this instructors unique Id
     */
    public Integer getId() {
        return id;
    }

    /**
     *
     * @param id Updated unique id for this instructor
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     *
     * @return Returns name of this instructor
     */
    public String getName() {
        return name;
    }

    /**
     *
     * @param name Updated name of this instructor
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     *
     * @return Returns list of courses taught by this instructor
     */
    public List<Course> getCourses() {
        return courses;
    }

    /**
     *
     * @param courseList Updated list of courses for this instructor
     */
    public void setCourses(List<Course> courseList) {
        this.courses = courseList;
    }

    public List<Review> getReviews() {
        return reviews;
    }

    public void setReviews(List<Review> reviews) {
        this.reviews = reviews;
    }
}
